// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: mesh/v1alpha1/proxy_template.proto

package v1alpha1

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"github.com/gogo/protobuf/types"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = types.DynamicAny{}
)

// Validate checks the field values on ProxyTemplate with the rules defined in
// the proto definition for this message. If any rules are violated, an error
// is returned.
func (m *ProxyTemplate) Validate() error {
	if m == nil {
		return nil
	}

	for idx, item := range m.GetSelectors() {
		_, _ = idx, item

		{
			tmp := item

			if v, ok := interface{}(tmp).(interface{ Validate() error }); ok {

				if err := v.Validate(); err != nil {
					return ProxyTemplateValidationError{
						field:  fmt.Sprintf("Selectors[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					}
				}
			}
		}

	}

	for idx, item := range m.GetConf() {
		_, _ = idx, item

		{
			tmp := item

			if v, ok := interface{}(tmp).(interface{ Validate() error }); ok {

				if err := v.Validate(); err != nil {
					return ProxyTemplateValidationError{
						field:  fmt.Sprintf("Conf[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					}
				}
			}
		}

	}

	return nil
}

// ProxyTemplateValidationError is the validation error returned by
// ProxyTemplate.Validate if the designated constraints aren't met.
type ProxyTemplateValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplateValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplateValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplateValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplateValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplateValidationError) ErrorName() string { return "ProxyTemplateValidationError" }

// Error satisfies the builtin error interface
func (e ProxyTemplateValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplate.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplateValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplateValidationError{}

// Validate checks the field values on ProxyTemplateSource with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ProxyTemplateSource) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Name

	switch m.Type.(type) {

	case *ProxyTemplateSource_Profile:

		{
			tmp := m.GetProfile()

			if v, ok := interface{}(tmp).(interface{ Validate() error }); ok {

				if err := v.Validate(); err != nil {
					return ProxyTemplateSourceValidationError{
						field:  "Profile",
						reason: "embedded message failed validation",
						cause:  err,
					}
				}
			}
		}

	case *ProxyTemplateSource_Raw:

		{
			tmp := m.GetRaw()

			if v, ok := interface{}(tmp).(interface{ Validate() error }); ok {

				if err := v.Validate(); err != nil {
					return ProxyTemplateSourceValidationError{
						field:  "Raw",
						reason: "embedded message failed validation",
						cause:  err,
					}
				}
			}
		}

	}

	return nil
}

// ProxyTemplateSourceValidationError is the validation error returned by
// ProxyTemplateSource.Validate if the designated constraints aren't met.
type ProxyTemplateSourceValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplateSourceValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplateSourceValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplateSourceValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplateSourceValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplateSourceValidationError) ErrorName() string {
	return "ProxyTemplateSourceValidationError"
}

// Error satisfies the builtin error interface
func (e ProxyTemplateSourceValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplateSource.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplateSourceValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplateSourceValidationError{}

// Validate checks the field values on ProxyTemplateProfileSource with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ProxyTemplateProfileSource) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Name

	// no validation rules for Params

	return nil
}

// ProxyTemplateProfileSourceValidationError is the validation error returned
// by ProxyTemplateProfileSource.Validate if the designated constraints aren't met.
type ProxyTemplateProfileSourceValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplateProfileSourceValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplateProfileSourceValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplateProfileSourceValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplateProfileSourceValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplateProfileSourceValidationError) ErrorName() string {
	return "ProxyTemplateProfileSourceValidationError"
}

// Error satisfies the builtin error interface
func (e ProxyTemplateProfileSourceValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplateProfileSource.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplateProfileSourceValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplateProfileSourceValidationError{}

// Validate checks the field values on ProxyTemplateRawSource with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ProxyTemplateRawSource) Validate() error {
	if m == nil {
		return nil
	}

	for idx, item := range m.GetResources() {
		_, _ = idx, item

		{
			tmp := item

			if v, ok := interface{}(tmp).(interface{ Validate() error }); ok {

				if err := v.Validate(); err != nil {
					return ProxyTemplateRawSourceValidationError{
						field:  fmt.Sprintf("Resources[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					}
				}
			}
		}

	}

	return nil
}

// ProxyTemplateRawSourceValidationError is the validation error returned by
// ProxyTemplateRawSource.Validate if the designated constraints aren't met.
type ProxyTemplateRawSourceValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplateRawSourceValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplateRawSourceValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplateRawSourceValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplateRawSourceValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplateRawSourceValidationError) ErrorName() string {
	return "ProxyTemplateRawSourceValidationError"
}

// Error satisfies the builtin error interface
func (e ProxyTemplateRawSourceValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplateRawSource.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplateRawSourceValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplateRawSourceValidationError{}

// Validate checks the field values on ProxyTemplateRawResource with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ProxyTemplateRawResource) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Name

	// no validation rules for Version

	// no validation rules for Resource

	return nil
}

// ProxyTemplateRawResourceValidationError is the validation error returned by
// ProxyTemplateRawResource.Validate if the designated constraints aren't met.
type ProxyTemplateRawResourceValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplateRawResourceValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplateRawResourceValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplateRawResourceValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplateRawResourceValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplateRawResourceValidationError) ErrorName() string {
	return "ProxyTemplateRawResourceValidationError"
}

// Error satisfies the builtin error interface
func (e ProxyTemplateRawResourceValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplateRawResource.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplateRawResourceValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplateRawResourceValidationError{}

// Validate checks the field values on ProxyTemplate_Selector with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ProxyTemplate_Selector) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Match

	return nil
}

// ProxyTemplate_SelectorValidationError is the validation error returned by
// ProxyTemplate_Selector.Validate if the designated constraints aren't met.
type ProxyTemplate_SelectorValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ProxyTemplate_SelectorValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ProxyTemplate_SelectorValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ProxyTemplate_SelectorValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ProxyTemplate_SelectorValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ProxyTemplate_SelectorValidationError) ErrorName() string {
	return "ProxyTemplate_SelectorValidationError"
}

// Error satisfies the builtin error interface
func (e ProxyTemplate_SelectorValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sProxyTemplate_Selector.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ProxyTemplate_SelectorValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ProxyTemplate_SelectorValidationError{}
