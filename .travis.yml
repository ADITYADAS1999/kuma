language: cpp
dist: xenial

branches:
  only:
  - /^envoy\/.*/

services:
- docker

#
# Notice: when you set environment variables, remember to
# explicitly propagate them into a Docker container (see ci/do_travis_ci.sh)
#

env:
  global:
  # include $HOME/.local/bin for `aws` on Linux
  # include $HOME/Library/Python/2.7/bin for `aws` on MacOS
  - PATH=$HOME/.local/bin:$HOME/Library/Python/2.7/bin:$PATH
  - KONVOY_REPO_DIR=$TRAVIS_BUILD_DIR
  - BUILD_DIR=$HOME/konvoy/build
  - DOWNLOADS_DIR=$BUILD_DIR/downloads
  - COMMIT=$TRAVIS_COMMIT
  - S3_CI_BUCKET=konvoy-ci
  - S3_KONVOY_BINARIES=$COMMIT/binaries
  - S3_KONVOY_COVERAGE=$COMMIT/coverage

  - DO_CI=ci/do_travis_ci.sh

  # TravisCI doesn't support IPv6 (see https://docs.travis-ci.com/user/reference/overview/#virtualisation-environment-vs-operating-system)
  - BAZEL_EXTRA_TEST_OPTIONS="--test_env=ENVOY_IP_TEST_VERSIONS=v4only"

cache:
  directories:
  # `awscli`
  - $HOME/.local

before_install:
  # set up awscli packages
  - pip install --user awscli

jobs:
  include:
  - stage: ci
    name: "Build Debian binary"
    os: linux
    env:
    - TARGET_OS=debian
    script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make build/binary.tar.gz upload/binary.tar.gz
  - stage: ci
    name: "Build CentOS binary"
    os: linux
    env:
    - TARGET_OS=centos
    script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make build/binary.tar.gz upload/binary.tar.gz
  - stage: ci
    name: "Build MacOS binary"
    os: osx
    env:
    - TARGET_OS=macos
    install:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - envoy/ci/mac_ci_setup.sh
    script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make build/binary.tar.gz upload/binary.tar.gz
  - stage: ci
    name: "Run tests on Debian"
    os: linux
    env:
    - TARGET_OS=debian
    script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make run/tests
  - stage: ci
    name: "Collect test coverage on Debian"
    os: linux
    env:
    - TARGET_OS=debian
    script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make collect/coverage
    after_script:
    - cd $KONVOY_REPO_DIR/components/konvoy-filter/
    - make upload/coverage
  - &build-package
    stage: package
    name: "Build package (ubuntu:18.04)"
    env:
    - BASE_IMAGE=ubuntu:18.04
    script:
    - cd $KONVOY_REPO_DIR/distributions/
    - make all/package
  - <<: *build-package
    name: "Build package (ubuntu:16.04)"
    env:
    - BASE_IMAGE=ubuntu:16.04
  - <<: *build-package
    name: "Build package (ubuntu:14.04)"
    env:
    - BASE_IMAGE=ubuntu:14.04
  - <<: *build-package
    name: "Build package (debian:9)"
    env:
    - BASE_IMAGE=debian:9
  - <<: *build-package
    name: "Build package (debian:8)"
    env:
    - BASE_IMAGE=debian:8
  - <<: *build-package
    name: "Build package (rhel:7)"
    env:
    - BASE_IMAGE=rhel:7
  - <<: *build-package
    name: "Build package (centos:7)"
    env:
    - BASE_IMAGE=centos:7
  - <<: *build-package
    name: "Build package (amazonlinux:2)"
    env:
    - BASE_IMAGE=amazonlinux:2
  - <<: *build-package
    name: "Build package (alpine:3.9)"
    env:
    - BASE_IMAGE=alpine:3.9
  - &build-image
    stage: package
    name: "Build Docker image (ubuntu:18.04)"
    env:
    - BASE_IMAGE=ubuntu:18.04
    script:
    - cd $KONVOY_REPO_DIR/distributions/
    - make all/image
  - <<: *build-image
    name: "Build Docker image (ubuntu:16.04)"
    env:
    - BASE_IMAGE=ubuntu:16.04
  - <<: *build-image
    name: "Build Docker image (ubuntu:14.04)"
    env:
    - BASE_IMAGE=ubuntu:14.04
  - <<: *build-image
    name: "Build Docker image (debian:9)"
    env:
    - BASE_IMAGE=debian:9
  - <<: *build-image
    name: "Build Docker image (debian:8)"
    env:
    - BASE_IMAGE=debian:8
  - <<: *build-image
    name: "Build Docker image (rhel:7)"
    env:
    - BASE_IMAGE=rhel:7
  - <<: *build-image
    name: "Build Docker image (centos:7)"
    env:
    - BASE_IMAGE=centos:7
  - <<: *build-image
    name: "Build Docker image (amazonlinux:2)"
    env:
    - BASE_IMAGE=amazonlinux:2
  - <<: *build-image
    name: "Build Docker image (alpine:3.9)"
    env:
    - BASE_IMAGE=alpine:3.9
