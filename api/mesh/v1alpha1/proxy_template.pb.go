// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mesh/v1alpha1/proxy_template.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ProxyTemplate defines the desired state of ProxyTemplate
type ProxyTemplate struct {
	// List of Dataplane selectors.
	// +optional
	Selectors []*ProxyTemplate_Selector `protobuf:"bytes,1,rep,name=selectors,proto3" json:"selectors,omitempty"`
	// List of imported profiles.
	// +optional
	Imports []string `protobuf:"bytes,2,rep,name=imports,proto3" json:"imports,omitempty"`
	// List of raw xDS resources.
	// +optional
	Resources            []*ProxyTemplateRawResource `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProxyTemplate) Reset()         { *m = ProxyTemplate{} }
func (m *ProxyTemplate) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplate) ProtoMessage()    {}
func (*ProxyTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{0}
}
func (m *ProxyTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplate.Merge(m, src)
}
func (m *ProxyTemplate) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplate proto.InternalMessageInfo

func (m *ProxyTemplate) GetSelectors() []*ProxyTemplate_Selector {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *ProxyTemplate) GetImports() []string {
	if m != nil {
		return m.Imports
	}
	return nil
}

func (m *ProxyTemplate) GetResources() []*ProxyTemplateRawResource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Selector defines a tag-based selector of Dataplanes.
type ProxyTemplate_Selector struct {
	// Match Dataplanes with the following key-value pairs.
	// +optional
	Match                map[string]string `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyTemplate_Selector) Reset()         { *m = ProxyTemplate_Selector{} }
func (m *ProxyTemplate_Selector) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplate_Selector) ProtoMessage()    {}
func (*ProxyTemplate_Selector) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{0, 0}
}
func (m *ProxyTemplate_Selector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplate_Selector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplate_Selector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplate_Selector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplate_Selector.Merge(m, src)
}
func (m *ProxyTemplate_Selector) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplate_Selector) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplate_Selector.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplate_Selector proto.InternalMessageInfo

func (m *ProxyTemplate_Selector) GetMatch() map[string]string {
	if m != nil {
		return m.Match
	}
	return nil
}

type ProxyTemplateSource struct {
	// Name of a configuration source.
	// +optional
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*ProxyTemplateSource_Profile
	//	*ProxyTemplateSource_Raw
	Type                 isProxyTemplateSource_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ProxyTemplateSource) Reset()         { *m = ProxyTemplateSource{} }
func (m *ProxyTemplateSource) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplateSource) ProtoMessage()    {}
func (*ProxyTemplateSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{1}
}
func (m *ProxyTemplateSource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplateSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplateSource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplateSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplateSource.Merge(m, src)
}
func (m *ProxyTemplateSource) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplateSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplateSource.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplateSource proto.InternalMessageInfo

type isProxyTemplateSource_Type interface {
	isProxyTemplateSource_Type()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ProxyTemplateSource_Profile struct {
	Profile *ProxyTemplateProfileSource `protobuf:"bytes,2,opt,name=profile,proto3,oneof"`
}
type ProxyTemplateSource_Raw struct {
	Raw *ProxyTemplateRawSource `protobuf:"bytes,3,opt,name=raw,proto3,oneof"`
}

func (*ProxyTemplateSource_Profile) isProxyTemplateSource_Type() {}
func (*ProxyTemplateSource_Raw) isProxyTemplateSource_Type()     {}

func (m *ProxyTemplateSource) GetType() isProxyTemplateSource_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ProxyTemplateSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProxyTemplateSource) GetProfile() *ProxyTemplateProfileSource {
	if x, ok := m.GetType().(*ProxyTemplateSource_Profile); ok {
		return x.Profile
	}
	return nil
}

func (m *ProxyTemplateSource) GetRaw() *ProxyTemplateRawSource {
	if x, ok := m.GetType().(*ProxyTemplateSource_Raw); ok {
		return x.Raw
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProxyTemplateSource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProxyTemplateSource_OneofMarshaler, _ProxyTemplateSource_OneofUnmarshaler, _ProxyTemplateSource_OneofSizer, []interface{}{
		(*ProxyTemplateSource_Profile)(nil),
		(*ProxyTemplateSource_Raw)(nil),
	}
}

func _ProxyTemplateSource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProxyTemplateSource)
	// type
	switch x := m.Type.(type) {
	case *ProxyTemplateSource_Profile:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Profile); err != nil {
			return err
		}
	case *ProxyTemplateSource_Raw:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Raw); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProxyTemplateSource.Type has unexpected type %T", x)
	}
	return nil
}

func _ProxyTemplateSource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProxyTemplateSource)
	switch tag {
	case 2: // type.profile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxyTemplateProfileSource)
		err := b.DecodeMessage(msg)
		m.Type = &ProxyTemplateSource_Profile{msg}
		return true, err
	case 3: // type.raw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxyTemplateRawSource)
		err := b.DecodeMessage(msg)
		m.Type = &ProxyTemplateSource_Raw{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProxyTemplateSource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProxyTemplateSource)
	// type
	switch x := m.Type.(type) {
	case *ProxyTemplateSource_Profile:
		s := proto.Size(x.Profile)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProxyTemplateSource_Raw:
		s := proto.Size(x.Raw)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ProxyTemplateProfileSource struct {
	// Profile name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Profile params if any.
	// +optional
	Params               map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyTemplateProfileSource) Reset()         { *m = ProxyTemplateProfileSource{} }
func (m *ProxyTemplateProfileSource) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplateProfileSource) ProtoMessage()    {}
func (*ProxyTemplateProfileSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{2}
}
func (m *ProxyTemplateProfileSource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplateProfileSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplateProfileSource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplateProfileSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplateProfileSource.Merge(m, src)
}
func (m *ProxyTemplateProfileSource) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplateProfileSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplateProfileSource.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplateProfileSource proto.InternalMessageInfo

func (m *ProxyTemplateProfileSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProxyTemplateProfileSource) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type ProxyTemplateRawSource struct {
	// List of raw xDS resources.
	// +optional
	Resources            []*ProxyTemplateRawResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProxyTemplateRawSource) Reset()         { *m = ProxyTemplateRawSource{} }
func (m *ProxyTemplateRawSource) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplateRawSource) ProtoMessage()    {}
func (*ProxyTemplateRawSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{3}
}
func (m *ProxyTemplateRawSource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplateRawSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplateRawSource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplateRawSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplateRawSource.Merge(m, src)
}
func (m *ProxyTemplateRawSource) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplateRawSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplateRawSource.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplateRawSource proto.InternalMessageInfo

func (m *ProxyTemplateRawSource) GetResources() []*ProxyTemplateRawResource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type ProxyTemplateRawResource struct {
	// The resource's name, to distinguish it from others of the same type of
	// resource.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource level version. It allows xDS to track the state of individual
	// resources.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// xDS resource.
	Resource             string   `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyTemplateRawResource) Reset()         { *m = ProxyTemplateRawResource{} }
func (m *ProxyTemplateRawResource) String() string { return proto.CompactTextString(m) }
func (*ProxyTemplateRawResource) ProtoMessage()    {}
func (*ProxyTemplateRawResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_129e53d675ac14f4, []int{4}
}
func (m *ProxyTemplateRawResource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyTemplateRawResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyTemplateRawResource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyTemplateRawResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyTemplateRawResource.Merge(m, src)
}
func (m *ProxyTemplateRawResource) XXX_Size() int {
	return m.Size()
}
func (m *ProxyTemplateRawResource) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyTemplateRawResource.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyTemplateRawResource proto.InternalMessageInfo

func (m *ProxyTemplateRawResource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProxyTemplateRawResource) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ProxyTemplateRawResource) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func init() {
	proto.RegisterType((*ProxyTemplate)(nil), "kuma.mesh.v1alpha1.ProxyTemplate")
	proto.RegisterType((*ProxyTemplate_Selector)(nil), "kuma.mesh.v1alpha1.ProxyTemplate.Selector")
	proto.RegisterMapType((map[string]string)(nil), "kuma.mesh.v1alpha1.ProxyTemplate.Selector.MatchEntry")
	proto.RegisterType((*ProxyTemplateSource)(nil), "kuma.mesh.v1alpha1.ProxyTemplateSource")
	proto.RegisterType((*ProxyTemplateProfileSource)(nil), "kuma.mesh.v1alpha1.ProxyTemplateProfileSource")
	proto.RegisterMapType((map[string]string)(nil), "kuma.mesh.v1alpha1.ProxyTemplateProfileSource.ParamsEntry")
	proto.RegisterType((*ProxyTemplateRawSource)(nil), "kuma.mesh.v1alpha1.ProxyTemplateRawSource")
	proto.RegisterType((*ProxyTemplateRawResource)(nil), "kuma.mesh.v1alpha1.ProxyTemplateRawResource")
}

func init() { proto.RegisterFile("mesh/v1alpha1/proxy_template.proto", fileDescriptor_129e53d675ac14f4) }

var fileDescriptor_129e53d675ac14f4 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcf, 0xca, 0xda, 0x40,
	0x10, 0xef, 0x26, 0xdf, 0xa7, 0x66, 0x42, 0xa1, 0x6c, 0xcb, 0xc7, 0x92, 0x83, 0x48, 0x4e, 0x22,
	0x65, 0x45, 0x4b, 0xc1, 0x7a, 0xe8, 0x41, 0x28, 0x88, 0xa5, 0x20, 0x6b, 0x4f, 0xbd, 0x94, 0xad,
	0x6e, 0x51, 0x4c, 0xdc, 0x65, 0xb3, 0x6a, 0xf3, 0x18, 0x7d, 0xa0, 0xd2, 0x6b, 0x8f, 0x85, 0xbe,
	0x40, 0xf1, 0x49, 0x4a, 0x36, 0x89, 0x56, 0xaa, 0xa8, 0xf4, 0x96, 0x19, 0x7e, 0xff, 0x66, 0x66,
	0x03, 0x61, 0x2c, 0x92, 0x79, 0x7b, 0xd3, 0xe1, 0x91, 0x9a, 0xf3, 0x4e, 0x5b, 0x69, 0xf9, 0x25,
	0xfd, 0x68, 0x44, 0xac, 0x22, 0x6e, 0x04, 0x55, 0x5a, 0x1a, 0x89, 0xf1, 0x72, 0x1d, 0x73, 0x9a,
	0x01, 0x69, 0x09, 0x0c, 0x7f, 0x39, 0xf0, 0x78, 0x9c, 0x81, 0xdf, 0x17, 0x58, 0x3c, 0x04, 0x2f,
	0x11, 0x91, 0x98, 0x1a, 0xa9, 0x13, 0x82, 0x1a, 0x6e, 0xd3, 0xef, 0xb6, 0xe8, 0xbf, 0x4c, 0x7a,
	0xc4, 0xa2, 0x93, 0x82, 0xc2, 0x0e, 0x64, 0x4c, 0xa0, 0xba, 0x88, 0x95, 0xd4, 0x26, 0x21, 0x4e,
	0xc3, 0x6d, 0x7a, 0xac, 0x2c, 0xf1, 0x08, 0x3c, 0x2d, 0x12, 0xb9, 0xd6, 0x53, 0x91, 0x10, 0xd7,
	0x7a, 0x3c, 0xbf, 0xe8, 0xc1, 0xf8, 0x96, 0x15, 0x24, 0x76, 0xa0, 0x07, 0x5f, 0x11, 0xd4, 0x4a,
	0x77, 0xfc, 0x16, 0xee, 0x63, 0x6e, 0xa6, 0xf3, 0x22, 0xf8, 0xcb, 0xeb, 0x83, 0xd3, 0x77, 0x19,
	0xef, 0xcd, 0xca, 0xe8, 0x94, 0xe5, 0x1a, 0x41, 0x0f, 0xe0, 0xd0, 0xc4, 0x4f, 0xc0, 0x5d, 0x8a,
	0x94, 0xa0, 0x06, 0x6a, 0x7a, 0x2c, 0xfb, 0xc4, 0xcf, 0xe0, 0x7e, 0xc3, 0xa3, 0xb5, 0x20, 0x8e,
	0xed, 0xe5, 0x45, 0xdf, 0xe9, 0xa1, 0xf0, 0x1b, 0x82, 0xa7, 0x47, 0x36, 0x13, 0x1b, 0x16, 0x63,
	0xb8, 0x5b, 0xf1, 0x58, 0x14, 0x22, 0xf6, 0x1b, 0x8f, 0xa0, 0xaa, 0xb4, 0xfc, 0xbc, 0x88, 0x72,
	0x1d, 0xbf, 0x4b, 0x2f, 0x86, 0x1e, 0xe7, 0xf8, 0x5c, 0x74, 0xf8, 0x88, 0x95, 0x02, 0xf8, 0x35,
	0xb8, 0x9a, 0x6f, 0x89, 0x6b, 0x75, 0x5a, 0xd7, 0x6c, 0x74, 0xaf, 0x91, 0x11, 0x07, 0x15, 0xb8,
	0x33, 0xa9, 0x12, 0xe1, 0x77, 0x04, 0xc1, 0x79, 0xc7, 0x93, 0x63, 0x30, 0xa8, 0x28, 0xae, 0x79,
	0x9c, 0xdf, 0xda, 0xef, 0xf6, 0x6f, 0x9b, 0x82, 0x8e, 0x2d, 0x39, 0xdf, 0x7f, 0xa1, 0x14, 0xbc,
	0x02, 0xff, 0xaf, 0xf6, 0x4d, 0x17, 0x98, 0xc1, 0xc3, 0xe9, 0x51, 0x8f, 0xdf, 0x1e, 0xfa, 0xaf,
	0xb7, 0x17, 0xce, 0x80, 0x9c, 0x83, 0x9d, 0x5c, 0x12, 0x81, 0xea, 0x46, 0xe8, 0x64, 0x21, 0x57,
	0x45, 0xe2, 0xb2, 0xc4, 0x01, 0xd4, 0x4a, 0x59, 0x7b, 0x3e, 0x8f, 0xed, 0xeb, 0xc1, 0xc3, 0x8f,
	0x5d, 0x1d, 0xfd, 0xdc, 0xd5, 0xd1, 0xef, 0x5d, 0x1d, 0x7d, 0xa8, 0x95, 0x09, 0x3f, 0x55, 0xec,
	0x6f, 0xfd, 0xe2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x91, 0x29, 0x17, 0xfc, 0x03, 0x00,
	0x00,
}

func (m *ProxyTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Selectors) > 0 {
		for _, msg := range m.Selectors {
			dAtA[i] = 0xa
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Imports) > 0 {
		for _, s := range m.Imports {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Resources) > 0 {
		for _, msg := range m.Resources {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyTemplate_Selector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplate_Selector) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Match) > 0 {
		for k, _ := range m.Match {
			dAtA[i] = 0xa
			i++
			v := m.Match[k]
			mapSize := 1 + len(k) + sovProxyTemplate(uint64(len(k))) + 1 + len(v) + sovProxyTemplate(uint64(len(v)))
			i = encodeVarintProxyTemplate(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyTemplateSource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplateSource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Type != nil {
		nn1, err := m.Type.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyTemplateSource_Profile) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Profile != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(m.Profile.Size()))
		n2, err := m.Profile.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *ProxyTemplateSource_Raw) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Raw != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(m.Raw.Size()))
		n3, err := m.Raw.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}
func (m *ProxyTemplateProfileSource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplateProfileSource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Params) > 0 {
		for k, _ := range m.Params {
			dAtA[i] = 0x12
			i++
			v := m.Params[k]
			mapSize := 1 + len(k) + sovProxyTemplate(uint64(len(k))) + 1 + len(v) + sovProxyTemplate(uint64(len(v)))
			i = encodeVarintProxyTemplate(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyTemplateRawSource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplateRawSource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Resources) > 0 {
		for _, msg := range m.Resources {
			dAtA[i] = 0xa
			i++
			i = encodeVarintProxyTemplate(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyTemplateRawResource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyTemplateRawResource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Version) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(len(m.Version)))
		i += copy(dAtA[i:], m.Version)
	}
	if len(m.Resource) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProxyTemplate(dAtA, i, uint64(len(m.Resource)))
		i += copy(dAtA[i:], m.Resource)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintProxyTemplate(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ProxyTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Selectors) > 0 {
		for _, e := range m.Selectors {
			l = e.Size()
			n += 1 + l + sovProxyTemplate(uint64(l))
		}
	}
	if len(m.Imports) > 0 {
		for _, s := range m.Imports {
			l = len(s)
			n += 1 + l + sovProxyTemplate(uint64(l))
		}
	}
	if len(m.Resources) > 0 {
		for _, e := range m.Resources {
			l = e.Size()
			n += 1 + l + sovProxyTemplate(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyTemplate_Selector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Match) > 0 {
		for k, v := range m.Match {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovProxyTemplate(uint64(len(k))) + 1 + len(v) + sovProxyTemplate(uint64(len(v)))
			n += mapEntrySize + 1 + sovProxyTemplate(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyTemplateSource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	if m.Type != nil {
		n += m.Type.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyTemplateSource_Profile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Profile != nil {
		l = m.Profile.Size()
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	return n
}
func (m *ProxyTemplateSource_Raw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Raw != nil {
		l = m.Raw.Size()
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	return n
}
func (m *ProxyTemplateProfileSource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	if len(m.Params) > 0 {
		for k, v := range m.Params {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovProxyTemplate(uint64(len(k))) + 1 + len(v) + sovProxyTemplate(uint64(len(v)))
			n += mapEntrySize + 1 + sovProxyTemplate(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyTemplateRawSource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Resources) > 0 {
		for _, e := range m.Resources {
			l = e.Size()
			n += 1 + l + sovProxyTemplate(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyTemplateRawResource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	l = len(m.Resource)
	if l > 0 {
		n += 1 + l + sovProxyTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProxyTemplate(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProxyTemplate(x uint64) (n int) {
	return sovProxyTemplate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProxyTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selectors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Selectors = append(m.Selectors, &ProxyTemplate_Selector{})
			if err := m.Selectors[len(m.Selectors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imports", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imports = append(m.Imports, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resources = append(m.Resources, &ProxyTemplateRawResource{})
			if err := m.Resources[len(m.Resources)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyTemplate_Selector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Selector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Selector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Match", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Match == nil {
				m.Match = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProxyTemplate
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyTemplate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyTemplate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipProxyTemplate(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Match[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyTemplateSource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyTemplateSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyTemplateSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Profile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProxyTemplateProfileSource{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Type = &ProxyTemplateSource_Profile{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Raw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProxyTemplateRawSource{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Type = &ProxyTemplateSource_Raw{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyTemplateProfileSource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyTemplateProfileSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyTemplateProfileSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowProxyTemplate
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyTemplate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowProxyTemplate
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipProxyTemplate(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthProxyTemplate
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Params[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyTemplateRawSource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyTemplateRawSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyTemplateRawSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resources = append(m.Resources, &ProxyTemplateRawResource{})
			if err := m.Resources[len(m.Resources)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyTemplateRawResource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyTemplateRawResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyTemplateRawResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resource = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProxyTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProxyTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProxyTemplate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProxyTemplate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProxyTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProxyTemplate
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthProxyTemplate
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProxyTemplate
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProxyTemplate(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthProxyTemplate
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProxyTemplate = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProxyTemplate   = fmt.Errorf("proto: integer overflow")
)
